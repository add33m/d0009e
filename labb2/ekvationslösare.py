import math
from typing import Callable

# "Callable[[float], float]" i 1a argumentet inneb칛r att jag kr칛ver en funktion som tar en float och returnerar en float
# Detta g칬r koden mer type safe, allts친 g칬r det l칛ttare f칬r IDEn att uppt칛cka misstag p친 f칬rhand
def derivative(f: Callable[[float], float], x: float, h: float):
  return (f(x+h) - f(x-h)) / (2 * h)

# Testa funktionen med d(sin(pi)), vilket b칬r vara == -1 (python ger float error dock 游땴)
print(derivative(math.sin, math.pi, .0001))

def solve(f: Callable[[float], float], x0: float, h: float):
  # S칛tt x i startpositionen
  x = x0
  newX = 0

  # Anv칛nder en makeshift do-while loop igen, s친klart g친r det att g칬ra p친 andra s칛tt ocks친!
  while True:
    
    # Bara en kopia av den fina matematiska formeln som 칛r inkluderad i labbinstruktionen
    newX = x - f(x) / derivative(f, x, h)

    # Avbryt n칛r r칛tt noggrannhet uppn친tts
    if abs(x - newX) < h:
      return newX
    else:
      x = newX

# Testa funktionerna
import d0009e_lab2_solveTest
